{"name":"Ito.jl","note":"Don't delete this file! It's used internally to help with page regeneration.","tagline":"A Julia package for quantitative finance","google":"UA-37085988-1","body":"#Ito, a Julia package for quantitive finance\r\n\r\nIto is a collection of modules containing algorithms for efficient quantitative finance. \r\n\r\nThis is an ambitious undertaking, and we are just getting started. However, it is hoped that even in this early state, the algorithms will be useful in themselves. We are obviously looking for help -- all contributions are gratefully accepted.\r\n\r\n##Why Julia\r\n\r\nJulia is a fast, dynamic language particularly suited for quantitative programs. It includes fast primitives for many required operations (e.g. fast matrix operations, FFTs) and a growing ecosystem for additional quantitative algorithms(e.g. the Distributions module)\r\n\r\nThe performance of the Julia interpreter (based on LLVM) means that almost all Julia primitives are implemented in Julia itself. For our purposes, this means that we get the power, expressiveness and productivity of writing quantitative techniques in a high level language, while still getting the speed of a low level implementation. This fact has a few important side effects\r\n\r\n* Its much easier to understand existing codebases, and therefore contribute\r\n* Julia is therefore highly suited for all pedagogic requirements \r\n* Kernels and objective functions can be written in Julia itself, which can then be passed to optimisation routines in Julia. This makes for a much smoother programming experience, while still maintaining performance. \r\n* Eventually, we will be able to leverage Julia's distributed computing capabilities to write efficient distributed algorithms. \r\n\r\n## Current Status\r\n\r\n* Comprehensive financial statistics are implemented\r\n* Numerical integration algorithm using adaptive Simpsons rule implemented"}